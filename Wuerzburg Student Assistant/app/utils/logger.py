import logging
from logging.handlers import TimedRotatingFileHandler
import os
from datetime import datetime

def setup_loggers() -> logging.Logger:
    """
    Initialize and configure the logging system for conversations.
    """
    if not os.path.exists('logs'):
        os.makedirs('logs')

    # Create conversation logger
    conversation_logger = logging.getLogger('conversations')
    # Prevent propagation to root logger
    conversation_logger.propagate = False
    conversation_logger.setLevel(logging.INFO)
    
    # Clear any existing handlers
    if conversation_logger.handlers:
        return conversation_logger

    # Create file handler for conversations
    conversation_file = os.path.join('logs', f'conversations_{datetime.now().strftime("%Y-%m-%d")}.log')
    file_handler = TimedRotatingFileHandler(
        conversation_file,
        when='midnight',
        interval=1,
        backupCount=30,
        encoding='utf-8'
    )
    
    formatter = logging.Formatter('%(asctime)s - %(message)s')
    file_handler.setFormatter(formatter)
    
    conversation_logger.addHandler(file_handler)
    
    return conversation_logger

def log_conversation(user_id: int, username: str, message: str, response: str) -> None:
    """
    Log a conversation exchange between a user and the bot.

    Args:
        user_id (int): The unique identifier of the user
        username (str): The username of the user
        message (str): The message sent by the user
        response (str): The response generated by the bot

    Returns:
        None: Writes the formatted conversation log to the configured logger
    """
    logger = logging.getLogger('conversations')
    log_message = f"""User ID: {user_id}
Username: {username}
Message: {message}
Bot Response: {response}
--------------------------------------------------"""
    logger.info(log_message)
